summary: Verify that the default SSID can be read from a gadget snap
description: |
    We check that we get the SSID name from the defaults in the gadget
    snap. To do this, we re-package the gadget snap in the store after
    changing gadget.yaml, and then we re-install it. A reboot is needed
    after this. After it, we install the wifi-ap snap and check that the
    SSID name is as expected.

prepare: |
    . $TESTSLIB/snap-names.sh
    # We have a reboot in the test, so we store this in permanent storage
    readlink /snap/$gadget_name/current > $HOME/gadget_version

restore: |
    . $TESTSLIB/snap-names.sh
    # Restore the original gadget snap so that any following tests don't suffer
    # from our modified gadget.
    read original_revision < $HOME/gadget_version
    current_revision="$(readlink /snap/$gadget_name/current)"
    if [ "$current_revision" != "$original_revision" ]; then
        snap revert --revision=$original_revision $gadget_name
    fi
    rm $HOME/gadget_version

execute: |
    . $TESTSLIB/snap-names.sh
    . $TESTSLIB/utilities.sh

    case "$SPREAD_REBOOT" in
    0)
        snap remove wifi-ap
        snap install --edge --devmode se-test-tools

        # We need a custom gadget snap for this so lets fetch one from the store
        # and modify it.
        snap download --stable $gadget_name
        /snap/bin/se-test-tools.unsquashfs -d gadget ${gadget_name}_*.snap
        printf "%s\n" \
            "defaults:" \
            "  # Below snap ID matches the one assigned for wifi-ap in the Ubuntu Store" \
            "  2rGgvyaY0CCzlWuKAPwFtCWrgwkM8lqS:" \
            "    default.wifi.ssid: GadgetSnap" \
        >>  gadget/meta/gadget.yaml

        /snap/bin/se-test-tools.mksquashfs gadget $gadget_name.snap -comp xz -no-xattrs
        snap install --dangerous $gadget_name.snap

        REBOOT
        ;;
    1)
        # Applying default configuration from a gadget snap only works when the snap
        # comes from the store. It is not possible for an unasserted snap to be
        # configured with defaults from the gadget. As a workaround, we install from
        # edge and then sideload the snap we are testing.
        snap install --edge wifi-ap

        # So we run the configure hook
        rm /var/snap/wifi-ap/common/.setup_done

        # Install prebuilt wifi-ap snap
        snap install --dangerous /home/wifi-ap/wifi-ap_*.snap

        test "$(snap get wifi-ap default.wifi.ssid)" = "GadgetSnap"

        # Wait until we can talk to the service
        while ! /snap/bin/wifi-ap.status; do sleep .1 ; done

        test "$(/snap/bin/wifi-ap.config get wifi.ssid)" = "GadgetSnap"
        ;;
    *)
        echo "Test failed, too many reboots"
        exit 1
    esac
