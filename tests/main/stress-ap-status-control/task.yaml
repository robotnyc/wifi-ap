summary: Stress test for the AP status control API

environment:
    RESTART_ITERATIONS: 5

prepare: |
    # Simulate two WiFi radio network interfaces
    modprobe mac80211_hwsim radios=2

    # We need some tools for scanning etc.
    snap install wireless-tools
    snap connect wireless-tools:network-control core

restore: |
    rmmod mac80211_hwsim

execute: |
    # Bring up the access point first
    /snap/bin/wifi-ap.config set disabled 0
    while ! /snap/bin/wifi-ap.status | grep "ap.active: 1" ; do
        sleep 0.5
    done

    # Scan for networks on the other side of the WiFi network
    # and ensure the network is available.
    sleep 3
    ifconfig wlan1 up
    sudo /snap/bin/wireless-tools.iw dev wlan1 scan | grep 'SSID: Ubuntu'

    # We will restart the AP a huge number of times again and again
    # and expect that the AP afterwards comes back up normally and
    # we can still search and connect to it.
    n=0
    while [ $n -lt $RESTART_ITERATIONS ] ; do
        /snap/bin/wifi-ap.status restart-ap
        let n=n+1
    done

    # The AP should be still available in our scan result
    sleep 3
    sudo /snap/bin/wireless-tools.iw dev wlan1 scan | grep 'SSID: Ubuntu'
    # Verify we can associate with the AP
    sudo /snap/bin/wireless-tools.iw wlan1 connect Ubuntu
    sudo /snap/bin/wireless-tools.iw dev wlan1 link | grep 'SSID: Ubuntu'

