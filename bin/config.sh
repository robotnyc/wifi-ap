#!/bin/bash
#
# Copyright (C) 2015, 2016 Canonical Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. $SNAP/bin/config-internal.sh

set_item() {
	case $1 in
		disabled)
			DISABLED=$2
			if [ "$DISABLED" == "0" ] ; then
				echo "To really startup the service you have to start the"
				echo "relevant service components on your own:"
				echo
				echo " $ systemctl restart snap.wifi-ap.backend"
			fi
			;;
		debug)
			DEBUG=$2
			;;
		wifi.interface)
			WIFI_INTERFACE=$2
			;;
		wifi.address)
			WIFI_ADDRESS=$2
			;;
		wifi.netmask)
			WIFI_NETMASK=$2
			;;
		wifi.interface-mode)
			WIFI_INTERFACE_MODE=$2
			;;
		wifi.hostapd-driver)
			WIFI_HOSTAPD_DRIVER=$2
			if [ "$WIFI_HOSTAPD_DRIVER" == "rtl8188" ] ; then
				# Select correct mode for the rtl8188 driver
				WIFI_INTERFACE_MODE=direct
			fi
			;;
		wifi.ssid)
			WIFI_SSID=$2
			;;
		wifi.security)
			WIFI_SECURITY=$2
			;;
		wifi.security-passphrase)
			WIFI_SECURITY_PASSPHRASE=$2
			;;
		wifi.channel)
			WIFI_CHANNEL=$2
			;;
		wifi.operation-mode)
			WIFI_OPERATION_MODE=$2
			;;
		share.network-interface)
			SHARE_NETWORK_INTERFACE=$2
			;;
		dhcp.range-start)
			DHCP_RANGE_START=$2
			;;
		dhcp.range-stop)
			DHCP_RANGE_STOP=$2
			;;
		dhcp.lease-time)
			DHCP_LEASE_TIME=$2
			;;
		*)
			echo "Unknown config item '$1'"
			exit 1
	esac
}

dump_config() {
	echo "Current configuration:"
	echo "==========================================================="
	echo "disabled: $DISABLED"
	echo "debug: $DEBUG"
	echo "wifi.interface: $WIFI_INTERFACE"
	echo "wifi.address: $WIFI_ADDRESS"
	echo "wifi.netmask: $WIFI_NETMASK"
	echo "wifi.interface-mode: $WIFI_INTERFACE_MODE"
	echo "wifi.hostapd-driver: $WIFI_HOSTAPD_DRIVER"
	echo "wifi.ssid: $WIFI_SSID"
	echo "wifi.security: $WIFI_SECURITY"
	echo "wifi.security-passphrase: $WIFI_SECURITY_PASSPHRASE"
	echo "wifi.channel: $WIFI_CHANNEL"
	echo "wifi.operation-mode: $WIFI_OPERATION_MODE"
	echo "share.network-interface: $SHARE_NETWORK_INTERFACE"
	echo "dhcp.range-start: $DHCP_RANGE_START"
	echo "dhcp.range-stop: $DHCP_RANGE_STOP"
	echo "dhcp.lease-time: $DHCP_LEASE_TIME"
}

write_configuration() {
	cat <<-EOF > $SNAP_DATA/config
	#!/bin/bash
	# THIS FILE IS AUTOGENERATED. Please use the the wifi-ap.config
	# command to change the configuration or create a overlay
	# configuration file at $SNAP_USER_DATA/config
	DISABLED=$DISABLED
	DEBUG=$DEBUG
	WIFI_INTERFACE=$WIFI_INTERFACE
	WIFI_ADDRESS=$WIFI_ADDRESS
	WIFI_NETMASK=$WIFI_NETMASK
	WIFI_INTERFACE_MODE=$WIFI_INTERFACE_MODE
	WIFI_HOSTAPD_DRIVER=$WIFI_HOSTAPD_DRIVER
	WIFI_SSID=$WIFI_SSID
	WIFI_SECURITY=$WIFI_SECURITY
	WIFI_SECURITY_PASSPHRASE=$WIFI_SECURITY_PASSPHRASE
	WIFI_CHANNEL=$WIFI_CHANNEL
	WIFI_OPERATION_MODE=$WIFI_OPERATION_MODE
	SHARE_NETWORK_INTERFACE=$SHARE_NETWORK_INTERFACE
	DHCP_RANGE_START=$DHCP_RANGE_START
	DHCP_RANGE_STOP=$DHCP_RANGE_STOP
	DHCP_LEASE_TIME=$DHCP_LEASE_TIME
	EOF
}

case "$1" in
	set)
		if [ "$(id -u)" != "0" ] ; then
			echo "ERROR: '$@' needs to be executed as root!"
			exit 1
		fi
		shift
		key=$1
		shift
		value=$1
		shift
		set_item $key $value
		write_configuration
		;;
	dump)
		dump_config
		shift
		;;
	*)
		echo "Unknown command '$1'."
		exit 1
		;;
esac
